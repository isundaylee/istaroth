# Default values for istaroth.

# Global settings
replicaCount: 1

# Backend configuration
backend:
  image:
    repository: isundaylee/istaroth
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 5000

  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 1Gi

  env:
    ISTAROTH_DOCUMENT_STORE: /data/checkpoint
    ISTAROTH_TRAINING_DEVICE: cpu
    HF_HOME: /data/models/hf
    # Add additional environment variables here
    # Example:
    # LANGSMITH_API_KEY: ""
    # LANGCHAIN_PROJECT: "istaroth-rag"
    # LANGCHAIN_TRACING_V2: "true"

# Frontend configuration
frontend:
  image:
    repository: isundaylee/istaroth-frontend
    tag: latest
    pullPolicy: Always

  service:
    type: ClusterIP
    port: 80

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  env:

# Persistent storage configuration
persistence:
  enabled: true
  storageClass: ""  # Leave empty to use default storage class
  accessMode: ReadWriteOnce
  size: 10Gi
  # Paths for different data types
  mountPath: /data
  subPaths:
    checkpoint: checkpoint
    database: database
    models: models/hf

# Service configuration
service:
  type: ClusterIP
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: nginx
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: istaroth.example.com
      paths:
        - path: /
          pathType: Prefix
          backend: frontend
        - path: /api
          pathType: Prefix
          backend: backend
  tls: []
  #  - secretName: istaroth-tls
  #    hosts:
  #      - istaroth.example.com

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

# Liveness and readiness probes
probes:
  backend:
    liveness:
      httpGet:
        path: /health
        port: 5000
      initialDelaySeconds: 30
      periodSeconds: 10
    readiness:
      httpGet:
        path: /health
        port: 5000
      initialDelaySeconds: 5
      periodSeconds: 5
  frontend:
    liveness:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 10
      periodSeconds: 10
    readiness:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 5

# Additional labels
labels: {}

# Additional annotations
annotations: {}
