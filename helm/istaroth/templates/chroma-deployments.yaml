{{- range $language, $config := .Values.languages }}
{{- if $config.useChroma }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-chroma-{{ $language }}
  labels:
    app.kubernetes.io/name: {{ $.Release.Name }}-chroma-{{ $language }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/component: chroma-{{ $language }}
    {{- with $.Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $.Release.Name }}-chroma-{{ $language }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $.Release.Name }}-chroma-{{ $language }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: chroma-{{ $language }}
      annotations:
        {{- with $.Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: wait-for-subpath
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          echo "Waiting for subpath 'checkpoint_web/{{ $language }}/chroma_index' to be available..."
          while [ ! -d "/data/checkpoint_web/{{ $language }}" ]; do
            echo "Directory /data/checkpoint_web/{{ $language }} not found, waiting..."
            sleep 5
          done
          echo "Creating chroma_index directory if it doesn't exist..."
          mkdir -p "/data/checkpoint_web/{{ $language }}/chroma_index"
          echo "Subpath is ready!"
        volumeMounts:
        - name: data
          mountPath: /data
        {{- with $.Values.containerSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      containers:
      - name: chroma
        image: {{ $.Values.chroma.image.repository }}:{{ $.Values.chroma.image.tag }}
        imagePullPolicy: {{ $.Values.chroma.image.pullPolicy }}
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: CHROMA_SERVER_CORS_ALLOW_ORIGINS
          value: '["*"]'
        - name: IS_PERSISTENT
          value: "1"
        volumeMounts:
        - name: data
          mountPath: /data
          subPath: "checkpoint_web/{{ $language }}/chroma_index"
        {{- with $.Values.chroma.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: 8000
          failureThreshold: 3
          timeoutSeconds: 30
          periodSeconds: 60
        readinessProbe:
          tcpSocket:
            port: 8000
          failureThreshold: 3
          timeoutSeconds: 30
          periodSeconds: 60
        {{- with $.Values.containerSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ $.Release.Name }}-scratch
{{- end }}
{{- end }}
